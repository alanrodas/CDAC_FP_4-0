// <auto-generated />
using System;
using MyACTS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyACTS.Data.Migrations;

[DbContext(typeof(ApplicationDbContext))]
[Migration("20230201_000011_InsertInitialData")]
partial class InsertInitialData
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder) {
        modelBuilder.Entity("MyACTS.Models.Entities.Role", entity =>
        {
            entity.ToTable("roles", (string) null);

            entity.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasColumnName("id_role");

            entity.Property<string>("Description")
                .HasColumnType("text")
                .HasColumnName("description");

            entity.Property<string>("Name")
                .IsRequired()
                .HasColumnType("varchar(255)")
                .HasColumnName("name");

            entity.HasKey("Id")
                .HasName("PK__roles");

            entity.HasIndex(new[] { "Name" }, "IDX__roles__name")
                .IsUnique()
                .HasDatabaseName("IDX__roles__name");
        });

        modelBuilder.Entity("MyACTS.Models.Entities.User", entity => {
            entity.ToTable("users", (string) null);

            entity.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .HasColumnName("id_user");

            entity.Property<string>("UserName")
                .IsRequired()
                .HasColumnType("varchar(255)")
                .HasColumnName("user_name");

            entity.Property<string>("FullName")
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnType("varchar(255)")
                .HasColumnName("full_name");

            entity.Property<string>("Email")
                .IsRequired()
                .HasColumnType("varchar(255)")
                .HasColumnName("email");

            entity.Property<string>("PhoneNumber")
                .HasMaxLength(255)
                .HasColumnType("varchar(255)")
                .HasColumnName("phone_number");

            entity.Property<DateOnly?>("DateOfBirth")
                .HasColumnType("date")
                .HasColumnName("date_of_birth");

            entity.Property<string>("PasswordHash")
                .HasMaxLength(255)
                .HasColumnType("varchar(255)")
                .HasColumnName("password_hash");

            entity.HasKey("Id")
                .HasName("PK__users");

            entity.HasIndex(new[] { "UserName" }, "IDX__users__user_name")
                .IsUnique();

            entity.HasIndex(new[] { "Email" }, "IDX__users__email")
                .IsUnique();
        });

        modelBuilder.Entity("UserRole", entity => {
            entity.ToTable("user_roles", (string) null);

            entity.Property<int>("UserId")
                .HasColumnName("id_user")
                .HasColumnType("int");

            entity.Property<int>("RoleId")
                .HasColumnName("id_role")
                .HasColumnType("int");

            entity.HasKey("UserId", "RoleId")
                .HasName("PK__user_roles")
                .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

            entity.HasIndex(new[] { "UserId" }, "IDX__user_roles__id_user");

            entity.HasIndex(new[] { "RoleId" }, "IDX__user_roles__id_role");
        });
    }
}

